
import { useState } from 'react';
import { useNavigate } from 'react-router-dom';
import { toast } from 'sonner';
import { supabase } from '@/integrations/supabase/client';

export const useAgentRegistration = () => {
  const navigate = useNavigate();
  const [fullName, setFullName] = useState('');
  const [phoneNumber, setPhoneNumber] = useState('');
  const [nationalId, setNationalId] = useState('');
  const [location, setLocation] = useState('');
  const [profilePicture, setProfilePicture] = useState<File | null>(null);
  const [profilePreview, setProfilePreview] = useState<string | null>(null);
  const [isLoading, setIsLoading] = useState(false);
  const [userId, setUserId] = useState<string | null>(null);

  const handleFileChange = (e: React.ChangeEvent<HTMLInputElement>) => {
    if (e.target.files && e.target.files[0]) {
      const file = e.target.files[0];
      setProfilePicture(file);
      
      // Create a preview
      const reader = new FileReader();
      reader.onloadend = () => {
        setProfilePreview(reader.result as string);
      };
      reader.readAsDataURL(file);
    }
  };

  const handleSubmit = async (e: React.FormEvent) => {
    e.preventDefault();
    
    if (!fullName || !phoneNumber || !nationalId || !location || !profilePicture || !userId) {
      toast.error('Please fill in all fields');
      return;
    }
    
    setIsLoading(true);
    
    try {
      // Upload profile picture
      const fileExt = profilePicture.name.split('.').pop();
      const filePath = `${userId}/${Date.now()}.${fileExt}`;
      
      const { error: uploadError } = await supabase.storage
        .from('agent_profiles')
        .upload(filePath, profilePicture);
        
      if (uploadError) {
        throw uploadError;
      }
      
      // Get public URL for the uploaded image
      const { data: urlData } = supabase.storage
        .from('agent_profiles')
        .getPublicUrl(filePath);
        
      // Insert agent data
      // Note: We don't need to specify agent_code as it's auto-generated by a database trigger
      const { error: insertError } = await supabase
        .from('agents')
        .insert({
          id: userId,
          full_name: fullName,
          phone_number: phoneNumber,
          national_id: nationalId,
          location,
          profile_picture: urlData.publicUrl,
          agent_code: '', // Adding this to satisfy TypeScript, will be overwritten by the trigger
        });
        
      if (insertError) {
        throw insertError;
      }
      
      toast.success('Registration successful');
      navigate('/dashboard');
    } catch (error: any) {
      console.error('Error registering agent:', error);
      toast.error(error.message || 'An error occurred during registration');
    } finally {
      setIsLoading(false);
    }
  };

  return {
    fullName,
    setFullName,
    phoneNumber,
    setPhoneNumber,
    nationalId,
    setNationalId,
    location,
    setLocation,
    profilePicture,
    profilePreview,
    isLoading,
    userId,
    setUserId,
    handleFileChange,
    handleSubmit
  };
};
